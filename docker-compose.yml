version: '3.9'

services:
  mysql-docker:
    image: mysql:8
    container_name: mysql-docker
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_HOST_PORT}:3306"  # host:container
    volumes:
      - mysql_data:/var/lib/mysql   # Persist MySQL data  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5  
    networks:
      - app-network


  redis:
    image: redis:7
    container_name: redis-docker
    ports:
     - "${REDIS_HOST_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5 
    networks:
      - app-network
      
      
      

  url-shortener:
    build: .
    container_name: url-shortener
    ports:
      - "${BACKEND_PORT}:8082"
    depends_on:
      mysql-docker:
        condition: service_healthy
      redis:
        condition: service_healthy  
    networks:
      - app-network
      
      
  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"   # expose NGINX on localhost(laptop):80 (Docker container in docker network)
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d  # mount your custom conf
    depends_on:
      - url-shortener
    networks:
      - app-network
      

volumes:
  mysql_data:      # Named volume for Persistence

networks:
  app-network:
    driver: bridge
